#
# OpenSIPS residential configuration script
#     by OpenSIPS Solutions <team@opensips-solutions.com>
#
# This script was generated via "make menuconfig", from
#   the "Residential" scenario.
# You can enable / disable more features / functionalities by
#   re-generating the scenario with different options.#
#
# Please refer to the Core CookBook at:
#      https://opensips.org/Resources/DocsCookbooks
# for a explanation of possible statements, functions and parameters.
#


####### Global Parameters #########
######################################################################
/* uncomment the following lines to enable debugging */
#debug_mode=yes

log_level=4
xlog_level=4
log_stderror=yes

udp_workers=4

####### Modules Section ########

#set module path
mpath="/usr/lib/x86_64-linux-gnu/opensips/modules/"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### MySQL module
loadmodule "db_sqlite.so"

#### REGISTRAR module
loadmodule "registrar.so"

#### AUTH modules
loadmodule "auth.so"
loadmodule "auth_db.so"
modparam("auth_db", "use_domain", yes)
modparam("auth_db", "calculate_ha1", yes)
modparam("auth_db", "password_column", "password")
modparam("auth_db", "db_url", "sqlite:///var/lib/opensips/db_sqlite/opensips.db")

#### USeR LOCation module
loadmodule "usrloc.so"
modparam("usrloc", "working_mode_preset", "single-instance-no-db")

loadmodule "proto_udp.so"

loadmodule "httpd.so"
loadmodule "mi_http.so"

####### Routing Logic ########

# main request routing logic

route {

	if (has_totag()) {
		send_reply(481, "Call/Transaction Does Not Exist");
		exit;
	}

	# accept just register requests
	if (!is_method("REGISTER")) {
		send_reply(503, "Service Unavailable");
		exit;
	}


	$var(rc) = www_authorize("", "subscriber");
        xlog("[$ci] authentication returned with $var(rc) code\n");
        if ($var(rc)<0) {
                www_challenge("", "auth");
                exit;
        }

        if ($au!=$tU) {
                send_reply(403,"Forbidden auth ID");
                exit;
        }

        # store the registration and generate a SIP reply
        if (!save("location"))
                xlog("failed to register AoR $tu\n");
	exit;
}
