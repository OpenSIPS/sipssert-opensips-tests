#
# OpenSIPS residential configuration script
#     by OpenSIPS Solutions <team@opensips-solutions.com>
#
# This script was generated via "make menuconfig", from
#   the "Residential" scenario.
# You can enable / disable more features / functionalities by
#   re-generating the scenario with different options.#
#
# Please refer to the Core CookBook at:
#      https://opensips.org/Resources/DocsCookbooks
# for a explanation of possible statements, functions and parameters.
#


####### Global Parameters #########
######################################################################
/* uncomment the following lines to enable debugging */
#debug_mode=yes

log_level=4
xlog_level=4
log_stderror=yes

udp_workers=4

####### Modules Section ########

#set module path
mpath="/usr/lib/x86_64-linux-gnu/opensips/modules/"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

loadmodule "proto_udp.so"

#### RR module
loadmodule "rr.so"

#### UAC module
loadmodule "uac.so"

#### UAC AUTHentication module
loadmodule "uac_auth.so"
modparam("uac_auth","auth_username_avp","$avp(username)")
modparam("uac_auth","auth_realm_avp","$avp(realm)")
modparam("uac_auth","auth_password_avp","$avp(password)")

####### Routing Logic ########

# main request routing logic

route {

	if (has_totag()) {
		send_reply(481, "Call/Transaction Does Not Exist");
		exit;
	}

	# accept just register requests
	if (!is_method("REGISTER")) {
		send_reply(503, "Service Unavailable");
		exit;
	}

	t_on_failure("register_failure");
	t_relay();
}

failure_route[register_failure] {
	if (!t_check_status("401"))
		exit;
	$avp(username) = "testing";
	$avp(realm) = $(<reply>challenge.realm);
	$avp(password) = "T3st|n6";
	if (uac_auth())
		t_relay();
}
